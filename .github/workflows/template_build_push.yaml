name: Template x-Build Workflow

on:
  workflow_call:
    inputs:
      dockerfile:
        required: true
        type: string
      context:
        required: true
        type: string
      image_name:
        required: true
        type: string
    secrets:
      DOCKER_REGISTRY_URI:
        required: true
      DOCKERHUB_TOKEN:
        required: true
      DOCKERHUB_USERNAME:
        required: true
    outputs:
      image_tag:
        description: "The new docker image tag"
        value: ${{ jobs.build_and_push.outputs.image_tag }}

# Permissions for the token
permissions:
  id-token: write
  contents: read

jobs: 
  docker:
    name: Build and Push to DockerHub
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.tag.outputs.image_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Create Docker Image Tag
        id: tag
        run: |
          if [ -n "${GITHUB_REF_TYPE}" ] && [ "${GITHUB_REF_TYPE}" == "tag" ]; then
            echo "image_tag=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
          else
            echo "image_tag=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          fi
      - name: Build and push
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          no-cache: true
          push: true
          attests: type=sbom
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_REGISTRY_URI }}:${{ inputs.image_name }}-${{ steps.tag.outputs.image_tag }}